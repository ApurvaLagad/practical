#!/usr/bin/env python
# coding: utf-8

# In[2]:


import sklearn


# In[13]:


import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from sklearn.neighbors import KNeighborsClassifier


# In[14]:


from sklearn.impute import SimpleImputer
from sklearn.preprocessing import StandardScaler
from sklearn.model_selection import train_test_split
from sklearn.metrics import confusion_matrix, roc_curve, roc_auc_score, f1_score, recall_score, precision_score


# In[16]:


df=pd.read_csv('diabetes.csv')


# In[17]:


df.head()


# In[19]:


df.drop(['Pregnancies', 'BloodPressure', 'SkinThickness'], axis=1, inplace=True)


# In[20]:


df


# In[22]:


df.describe()


# In[24]:


hist = df.hist(figsize=(20,16))


# In[26]:


target_feature = 'Outcome'
num_features = list(set(df.columns) - set([target_feature]))


# In[27]:


X = df.drop(target_feature, axis=1)
y = df[target_feature]
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=0, stratify=y)


# In[28]:


imputer = SimpleImputer(missing_values=0.0, strategy='median')
imputer.fit(X_train[['Glucose','BMI']])
X_train[['Glucose','BMI']] = imputer.transform(X_train[['Glucose','BMI']])
X_test[['Glucose','BMI']] = imputer.transform(X_test[['Glucose','BMI']])


# In[30]:


model=KNeighborsClassifier()


# In[31]:


model.fit(X_train, y_train)
y_pred = model.predict(X_test)


# In[33]:


confusion_matrix(y_true=y_test, y_pred=y_pred)


# In[36]:


from sklearn.metrics import recall_score,accuracy_score


# In[37]:


accuracy_score(y_true=y_test, y_pred=y_pred)


# In[38]:


recall_score(y_true=y_test, y_pred=y_pred)


# In[7]:


print(dir(sklearn.__builtins__))


# In[8]:


print(sklearn.__dict__)


# In[10]:


import sklearn.linear_model


# In[11]:


print(sklearn.linear_model.__dict__)